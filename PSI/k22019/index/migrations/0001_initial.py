# Generated by Django 4.0.4 on 2022-05-02 12:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Korisnik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('godina_rodjenja', models.IntegerField(db_column='Godina_rodjenja')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Drzava',
            fields=[
                ('iddrz', models.AutoField(db_column='IdDrz', primary_key=True, serialize=False)),
                ('naziv', models.CharField(db_column='Naziv', max_length=45)),
            ],
            options={
                'db_table': 'Drzava',
            },
        ),
        migrations.CreateModel(
            name='Staza',
            fields=[
                ('naziv', models.CharField(db_column='Naziv', max_length=45, primary_key=True, serialize=False)),
                ('godina_otvaranja', models.IntegerField(db_column='Godina_otvaranja')),
                ('duzina', models.IntegerField(db_column='Duzina')),
                ('max_broj_posetilaca', models.IntegerField(blank=True, db_column='Max_broj_posetilaca', null=True)),
                ('adresa', models.CharField(db_column='Adresa', max_length=45)),
            ],
            options={
                'db_table': 'Staza',
            },
        ),
        migrations.CreateModel(
            name='Tim',
            fields=[
                ('idtim', models.AutoField(db_column='IdTim', primary_key=True, serialize=False)),
                ('naziv', models.CharField(blank=True, db_column='Naziv', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Tim',
            },
        ),
        migrations.CreateModel(
            name='Vozac',
            fields=[
                ('broj', models.IntegerField(db_column='Broj', primary_key=True, serialize=False)),
                ('ime', models.CharField(db_column='Ime', max_length=45)),
                ('prezime', models.CharField(db_column='Prezime', max_length=45)),
                ('godina_rodjenja', models.IntegerField(db_column='Godina_rodjenja')),
                ('iddrz', models.ForeignKey(db_column='IdDrz', on_delete=django.db.models.deletion.DO_NOTHING, to='index.drzava')),
                ('idtim', models.ForeignKey(db_column='IdTim', on_delete=django.db.models.deletion.DO_NOTHING, to='index.tim')),
            ],
            options={
                'db_table': 'Vozac',
            },
        ),
        migrations.CreateModel(
            name='Trka',
            fields=[
                ('idtrk', models.AutoField(db_column='IdTrk', primary_key=True, serialize=False)),
                ('naziv', models.CharField(db_column='Naziv', max_length=45)),
                ('broj_krugova', models.IntegerField(db_column='Broj_krugova')),
                ('datum', models.DateField(db_column='Datum')),
                ('staza', models.ForeignKey(db_column='Staza', on_delete=django.db.models.deletion.DO_NOTHING, to='index.staza')),
            ],
            options={
                'db_table': 'Trka',
            },
        ),
        migrations.CreateModel(
            name='Sektor',
            fields=[
                ('idsek', models.AutoField(db_column='IdSek', primary_key=True, serialize=False)),
                ('naziv', models.CharField(blank=True, db_column='Naziv', max_length=45, null=True)),
                ('broj_redova', models.IntegerField(blank=True, db_column='Broj_redova', null=True)),
                ('broj_sedista', models.IntegerField(blank=True, db_column='Broj_sedista', null=True)),
                ('cena', models.IntegerField(blank=True, db_column='Cena', null=True)),
                ('idtrk', models.ForeignKey(db_column='IdTrk', on_delete=django.db.models.deletion.DO_NOTHING, to='index.trka')),
            ],
            options={
                'db_table': 'Sektor',
            },
        ),
        migrations.CreateModel(
            name='Rezultat',
            fields=[
                ('idrez', models.AutoField(db_column='IdRez', primary_key=True, serialize=False)),
                ('ukupno_vreme', models.TimeField(db_column='Ukupno_vreme')),
                ('najbrzi_krug', models.TimeField(db_column='Najbrzi_krug')),
                ('broj_poena', models.IntegerField(db_column='Broj_poena')),
                ('idtrk', models.ForeignKey(db_column='IdTrk', on_delete=django.db.models.deletion.DO_NOTHING, to='index.trka')),
                ('vozac_broj', models.ForeignKey(db_column='Vozac_Broj', on_delete=django.db.models.deletion.DO_NOTHING, to='index.vozac')),
            ],
            options={
                'db_table': 'Rezultat',
            },
        ),
        migrations.CreateModel(
            name='Karta',
            fields=[
                ('idkar', models.AutoField(db_column='idKar', primary_key=True, serialize=False)),
                ('broj_karata', models.IntegerField(blank=True, db_column='Broj_karata', null=True)),
                ('idsek', models.ForeignKey(db_column='IdSek', on_delete=django.db.models.deletion.DO_NOTHING, to='index.sektor')),
                ('username', models.ForeignKey(db_column='Username', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Karta',
            },
        ),
        migrations.CreateModel(
            name='TipKarte',
            fields=[
                ('kategorija', models.CharField(db_column='Kategorija', max_length=1, primary_key=True, serialize=False)),
                ('idsek', models.ForeignKey(db_column='IdSek', on_delete=django.db.models.deletion.DO_NOTHING, to='index.sektor')),
            ],
            options={
                'db_table': 'Tip_karte',
                'unique_together': {('kategorija', 'idsek')},
            },
        ),
    ]
